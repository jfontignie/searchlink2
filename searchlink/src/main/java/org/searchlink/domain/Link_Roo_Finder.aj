// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.searchlink.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.searchlink.domain.Link;
import org.searchlink.domain.Product;

privileged aspect Link_Roo_Finder {
    
    public static TypedQuery<Link> Link.findLinksBySource(Product source) {
        if (source == null) throw new IllegalArgumentException("The source argument is required");
        EntityManager em = Link.entityManager();
        TypedQuery<Link> q = em.createQuery("SELECT o FROM Link AS o WHERE o.source = :source", Link.class);
        q.setParameter("source", source);
        return q;
    }
    
    public static TypedQuery<Link> Link.findLinksBySourceAndTarget(Product source, Product target) {
        if (source == null) throw new IllegalArgumentException("The source argument is required");
        if (target == null) throw new IllegalArgumentException("The target argument is required");
        EntityManager em = Link.entityManager();
        TypedQuery<Link> q = em.createQuery("SELECT o FROM Link AS o WHERE o.source = :source AND o.target = :target", Link.class);
        q.setParameter("source", source);
        q.setParameter("target", target);
        return q;
    }
    
    public static TypedQuery<Link> Link.findLinksBySourceOrTarget(Product source, Product target) {
        if (source == null) throw new IllegalArgumentException("The source argument is required");
        if (target == null) throw new IllegalArgumentException("The target argument is required");
        EntityManager em = Link.entityManager();
        TypedQuery<Link> q = em.createQuery("SELECT o FROM Link AS o WHERE o.source = :source OR o.target = :target", Link.class);
        q.setParameter("source", source);
        q.setParameter("target", target);
        return q;
    }
    
}

// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.searchlink.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import org.searchlink.domain.Correlation;
import org.searchlink.domain.Keyword;

privileged aspect Correlation_Roo_Finder {
    
    public static TypedQuery<Correlation> Correlation.findCorrelationsByX(Keyword x) {
        if (x == null) throw new IllegalArgumentException("The x argument is required");
        EntityManager em = Correlation.entityManager();
        TypedQuery<Correlation> q = em.createQuery("SELECT o FROM Correlation AS o WHERE o.x = :x", Correlation.class);
        q.setParameter("x", x);
        return q;
    }
    
    public static TypedQuery<Correlation> Correlation.findCorrelationsByXAndY(Keyword x, Keyword y) {
        if (x == null) throw new IllegalArgumentException("The x argument is required");
        if (y == null) throw new IllegalArgumentException("The y argument is required");
        EntityManager em = Correlation.entityManager();
        TypedQuery<Correlation> q = em.createQuery("SELECT o FROM Correlation AS o WHERE o.x = :x AND o.y = :y", Correlation.class);
        q.setParameter("x", x);
        q.setParameter("y", y);
        return q;
    }
    
    public static TypedQuery<Correlation> Correlation.findCorrelationsByXOrY(Keyword x, Keyword y) {
        if (x == null) throw new IllegalArgumentException("The x argument is required");
        if (y == null) throw new IllegalArgumentException("The y argument is required");
        EntityManager em = Correlation.entityManager();
        TypedQuery<Correlation> q = em.createQuery("SELECT o FROM Correlation AS o WHERE o.x = :x OR o.y = :y", Correlation.class);
        q.setParameter("x", x);
        q.setParameter("y", y);
        return q;
    }
    
    public static TypedQuery<Correlation> Correlation.findCorrelationsByY(Keyword y) {
        if (y == null) throw new IllegalArgumentException("The y argument is required");
        EntityManager em = Correlation.entityManager();
        TypedQuery<Correlation> q = em.createQuery("SELECT o FROM Correlation AS o WHERE o.y = :y", Correlation.class);
        q.setParameter("y", y);
        return q;
    }
    
}
